# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ pratik_testing ]
  pull_request:
    branches: [ pratik_testing ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Run in all these versions of Python
        python-version: [3.8]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
        # Checkout the latest code from the repo
      - name: Checkout repo
        uses: actions/checkout@v2
        # Setup which version of Python to use
      - name: Set Up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          token: ${{ secrets.CODECOV_TOKEN }}

        # Display the Python version being used
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"
        # Install the package using the setup.py
      - name: Install package
        run: pip install .
        # Install requirements.txt
      - name: Install requirements
        run: pip install -r requirements.txt
        # Install pytest (you can use some other testing utility)
      - name: Install mock
        run: pip install mock

      - name: Install coverage
        run: pip install coverage

      - name: Install codecov
        run: pip install codecov

      - name: Install pytest
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          pip install pytest-cov
        # Run the tests. I'm using pytest and the file is in the tests directory.
      - name: Install pylint
        run: |
          pip install pylint
      - name: Run tests
        env:
          API_TOKEN: ${{ secrets.API_TOKEN }}
          CHAT_ID: ${{ secrets.CHAT_ID }}
        run: |
          export PYTHONPATH=code
          python -m pytest -v --cov=code/ --cov-report=xml

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
              